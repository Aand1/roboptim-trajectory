var searchData=
[
  ['addconstraint',['addConstraint',['../a00020.html#a059e94dbed54ef226d74ccb7da4e63db',1,'roboptim::trajectory::ProblemOverSplinesFactory::addConstraint(value_type time, int order, const vector_t &amp;value, const scaling_t &amp;scaling, value_type eps=-1.)'],['../a00020.html#aa58b13fb1cfdcbfeb43d9cd5811a226c',1,'roboptim::trajectory::ProblemOverSplinesFactory::addConstraint(value_type time, int order, const vector_t &amp;value)']]],
  ['addcoupledconstraint',['addCoupledConstraint',['../a00006.html#abb197036f7a04d5916d04026245e6af6',1,'roboptim::trajectory::ConstrainedBSpline']]],
  ['addfixedconstraint',['addFixedConstraint',['../a00006.html#a8e02b209c64c8bafd8a0a0fc21588e5c',1,'roboptim::trajectory::ConstrainedBSpline']]],
  ['addintervalconstraint',['addIntervalConstraint',['../a00020.html#a1bb5bc273ba0413d0f4b7969fcc74d85',1,'roboptim::trajectory::ProblemOverSplinesFactory::addIntervalConstraint(value_type startingPoint, int order, const intervals_t &amp;range, const scalingVect_t &amp;scaling)'],['../a00020.html#a29fb6848bf854a27f8393c110a358f79',1,'roboptim::trajectory::ProblemOverSplinesFactory::addIntervalConstraint(value_type startingPoint, int order, const intervals_t &amp;range)']]],
  ['addscaletoparameters',['addScaleToParameters',['../a00089.html#ae8c64d8ebb9a31cd0079ba92580e7f61',1,'roboptim::trajectory']]],
  ['addspline',['addSpline',['../a00020.html#a22f7989743a9f5fef65d5fb7efe984b3',1,'roboptim::trajectory::ProblemOverSplinesFactory']]],
  ['addtoproblem',['addToProblem',['../a00013.html#a0b464b6a04dee0b0528c937bce71c92d',1,'roboptim::trajectory::LimitOmega::addToProblem()'],['../a00014.html#a8ccdb678e341264f92d5d16e223df4cd',1,'roboptim::trajectory::LimitSpeed::addToProblem()'],['../a00022.html#a7ba2e1634cecf9c6b2adfc82cc7a543e',1,'roboptim::trajectory::StablePointStateFunction::addToProblem()'],['../a00024.html#a800c8a12c6e04d205229703638a72b2a',1,'roboptim::trajectory::StateFunction::addToProblem(const trajectory_t &amp;trajectory, boost::shared_ptr&lt; DerivableFunction &gt; function, unsigned order, Problem&lt; M &gt; &amp;problem, typename Function::interval_t bounds, unsigned nConstraints)'],['../a00024.html#a0beb5769e5d0bbb02916aada1f00616d',1,'roboptim::trajectory::StateFunction::addToProblem(const trajectory_t &amp;trajectory, boost::shared_ptr&lt; DerivableFunction &gt; function, unsigned order, Problem&lt; M &gt; &amp;problem, const typename Function::intervals_t &amp;bounds, const std::vector&lt; typename Function::value_type &gt; &amp;scales, unsigned nConstraints)'],['../a00013.html#a7d805a661f96537d207f92fae0872fe3',1,'roboptim::trajectory::LimitOmega::addToProblem()'],['../a00014.html#ae5ca5c5045b30a5a071230acc01ebed7',1,'roboptim::trajectory::LimitSpeed::addToProblem()']]],
  ['all_5fzero_5fcoefficients',['all_zero_coefficients',['../a00019.html#a0184bffd60b7f3cbddaa8b78596577a5a79a4a1cc3ef6d72f3b7b3bfc97bf506f',1,'roboptim::trajectory::Polynomial']]],
  ['anthropomorphic_2dcost_2dfunction_2ehh',['anthropomorphic-cost-function.hh',['../a00031.html',1,'']]],
  ['anthropomorphic_2dcost_2dfunction_2ehxx',['anthropomorphic-cost-function.hxx',['../a00032.html',1,'']]],
  ['anthropomorphiccostfunction',['AnthropomorphicCostFunction',['../a00003.html',1,'roboptim::trajectory']]],
  ['anthropomorphiccostfunction',['AnthropomorphicCostFunction',['../a00003.html#aaad30aa571f7bde40274cf4ba743f916',1,'roboptim::trajectory::AnthropomorphicCostFunction']]],
  ['asfunction',['asFunction',['../a00019.html#a377e0b0e87334988886bf92238078689',1,'roboptim::trajectory::Polynomial']]]
];
